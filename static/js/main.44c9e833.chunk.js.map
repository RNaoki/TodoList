{"version":3,"sources":["components/modal.js","views/todo.js","routesConfig.js","App.js","index.js"],"names":["Modal","show","children","showHideClassName","className","Todo","props","changeInput","ev","value","preventDefault","setState","state","bgcolor","target","name","showModal","sname","category","hideModal","onDragStart","id","console","log","dataTransfer","setData","onDragOver","onDrop","cat","getData","tasks","filter","task","addTask","checkColor","push","color","require","tinycolor","getBrightness","todo","doing","complete","this","forEach","t","key","e","draggable","style","backgroundColor","onClick","onChange","type","Component","routesConfig","path","component","exact","App","language","map","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.44c9e833.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Modal = ({ show, children }) => {\r\n  const showHideClassName = show ? \"modal-back display-block\" : \"modal-back display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        <div className=\"content\">\r\n          {children}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Modal from '../components/modal.js'\r\n\r\nclass Todo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks: [\r\n                { name: \"Learn React\", category: \"todo\", bgcolor: \"pink\" },\r\n                { name: \"Learn Redux\", category: \"todo\", bgcolor: \"skyblue\" }\r\n            ],\r\n            name: \"\",\r\n            category: \"\",\r\n            bgcolor: \"\",\r\n            show: false\r\n        }\r\n    }\r\n\r\n    changeInput = (ev, value) => {\r\n        ev.preventDefault();\r\n        var functions = {\r\n            'color': () => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    bgcolor: ev.target.value\r\n                })\r\n            },\r\n            'name': () => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    name: ev.target.value\r\n                })\r\n            }\r\n        }\r\n        functions[value]();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            show: true,\r\n            sname: \"\",\r\n            category: \"\",\r\n            bgcolor: \"\"\r\n        });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            show: false,\r\n            sname: \"\",\r\n            category: \"\",\r\n            bgcolor: \"\",\r\n        });\r\n    }\r\n\r\n    onDragStart = (ev, id) => {\r\n        console.log('dragstart:', id);\r\n        ev.dataTransfer.setData(\"id\", id);\r\n    }\r\n\r\n    onDragOver = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    onDrop = (ev, cat) => {\r\n        let id = ev.dataTransfer.getData(\"id\");\r\n\r\n        let tasks = this.state.tasks.filter((task) => {\r\n            if (task.name === id) {\r\n                task.category = cat;\r\n            }\r\n            return task;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tasks\r\n        });\r\n    }\r\n\r\n    addTask = (name, bgcolor) => {\r\n        var brightness = this.checkColor(bgcolor)\r\n        if(brightness >= 100){\r\n            this.state.tasks.push({ name: name, category: 'todo', bgcolor: bgcolor, color: \"rgb(26, 32, 41)\" })\r\n        }else{\r\n            this.state.tasks.push({ name: name, category: 'todo', bgcolor: bgcolor, color: \"hsl(0, 0%, 87%)\" })\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            sname: \"\",\r\n            category: \"\",\r\n            bgcolor: \"\",\r\n            show: false\r\n        });\r\n    }\r\n\r\n    checkColor = (bgcolor) => {\r\n        var tinycolor = require(\"tinycolor2\");\r\n        var color = tinycolor(bgcolor);\r\n        return color.getBrightness()\r\n    }\r\n\r\n    render() {\r\n\r\n        var tasks = {\r\n            todo: [],\r\n            doing: [],\r\n            complete: []\r\n        }\r\n\r\n        this.state.tasks.forEach((t) => {\r\n            tasks[t.category].push(\r\n                <div key={t.name}\r\n                    onDragStart={(e) => this.onDragStart(e, t.name)}\r\n                    draggable\r\n                    className=\"draggable\"\r\n                    style={{ backgroundColor: t.bgcolor, color: t.color }}\r\n                >\r\n                    {t.name}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"split left\">\r\n                    <div className=\"centered\">\r\n                        <div className=\"title\">\r\n                            TODO-LIST\r\n                            <button className=\"add-button\" onClick={this.showModal}>+</button>\r\n                        </div>\r\n                        <div className=\"activities\">\r\n                            <div className=\"container-drag\">\r\n                                <div className=\"droppable\"\r\n                                    onDragOver={(e) => this.onDragOver(e)}\r\n                                    onDrop={(e) => { this.onDrop(e, \"todo\") }}>\r\n                                    {tasks.todo}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"split middle\">\r\n                        <div className=\"centered\">\r\n                            <div className=\"title\">\r\n                                DOING\r\n                            </div>\r\n                            <div className=\"container-drag\">\r\n                                <div className=\"droppable\"\r\n                                    onDragOver={(e) => this.onDragOver(e)}\r\n                                    onDrop={(e) => { this.onDrop(e, \"doing\") }}>\r\n                                    {tasks.doing}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Modal show={this.state.show}>\r\n                            <div>\r\n                                <div>\r\n                                    Name:\r\n                            </div>\r\n                                <input className=\"add-input\" value={this.state.name} onChange={(e) => this.changeInput(e, 'name')} />\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    Color:\r\n                            </div>\r\n                                <input name=\"Color Picker\" type=\"color\" value={this.state.color} onChange={(e) => this.changeInput(e, 'color')} />\r\n                            </div>\r\n                            <div className=\"buttons\">\r\n                                <button className=\"cancel\" onClick={this.hideModal}>CLOSE</button>\r\n                                <button className=\"save\" onClick={() => this.addTask(this.state.name, this.state.bgcolor)}>SAVE</button>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                    <div className=\"split right\">\r\n                        <div className=\"centered\">\r\n                            <div className=\"title\">\r\n                                DONE\r\n                            </div>\r\n                            <div className=\"activities\">\r\n                                <div className=\"droppable\"\r\n                                    onDragOver={(e) => this.onDragOver(e)}\r\n                                    onDrop={(e) => this.onDrop(e, \"complete\")}>\r\n                                    {tasks.complete}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import Todo from \"./views/todo\";\r\n\r\nconst routesConfig = [\r\n    {\r\n        path:\"/\",\r\n        component:Todo,\r\n        exact:true\r\n    },\r\n    {\r\n        path:\"/todo-list\",\r\n        component:Todo,\r\n        exact:true\r\n    },\r\n]\r\n\r\nexport default routesConfig","import React, { Component } from 'react';\r\nimport { Route } from 'react-router'\r\nimport routesConfig from './routesConfig';\r\nimport './App.css';\r\nimport './style/todo.css'\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      language: 'en'\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {routesConfig.map((value, key) => {\r\n            return <Route\r\n              key={key}\r\n              path={value.path}\r\n              render={(props) => (\r\n                <value.component {...props} language={this.state.language}/>\r\n              )}\r\n              exact={value.exact}\r\n            ></Route>\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './style/modal.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <App />\r\n  </Router>, document.getElementById('root'));"],"sourceRoot":""}